# SPDX-FileCopyrightText: 2023 German Aerospace Center (DLR), Forschungszentrum JÃ¼lich, Helmholtz-Zentrum Dresden-Rossendorf
#
# SPDX-License-Identifier: CC0-1.0

# "Call-back" to create archive
# ADAPT with commands that create a file to upload. The filename is provided as $HERMES_ARCHIVE_NAME.
.hermes_create_deposition: &hermes_create_deposition
  - git fetch origin "$MR_TARGET_BRANCH"
  - git archive --format zip "origin/$MR_TARGET_BRANCH" > $HERMES_ARCHIVE_NAME


# Basic building blocks of hermes jobs
# - Set up git with a valid author and configure URL to allow pushes.
.hermes_prepare_git: &hermes_prepare_git
  - git config user.name "$GITLAB_USER_NAME"
  - git config user.email "$GITLAB_USER_EMAIL"
  - git remote set-url origin "${CI_SERVER_PROTOCOL}://__token__:${HERMES_PUSH_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}/${CI_PROJECT_PATH}.git"

# - Create a new branch, commit changes and create a matching merge request.
.hermes_create_merge_request: &hermes_create_merge_request
  - git branch "$MR_SOURCE_BRANCH" "origin/$MR_TARGET_BRANCH"
  - git switch "$MR_SOURCE_BRANCH"
  - git commit -m "$MR_COMMIT_MESSAGE"
  - >-
    git push origin "$MR_SOURCE_BRANCH"
    -o merge_request.create
    -o merge_request.target="$MR_TARGET_BRANCH"
    -o merge_request.title="$MR_TITLE"
    -o merge_request.description="$MR_DESCRIPTION"
    -o merge_request.remove_source_branch

# - Delete all branches created by hermes for curation.
.hermes_cleanup_branches: &hermes_cleanup_branches
  - |
    for BRANCH in $(git ls-remote origin 'refs/heads/hermes/curate-*' | cut -f2 | cut -d'/' -f'3-'); do
      git push origin --delete "$BRANCH"
    done

# Base job template for hermes
.hermes_job:
  stage: deploy
  image: python:3.10
  before_script:
    - *hermes_prepare_git
    - pip install git+https://github.com/hermes-hmc/workflow.git
  tags:
    - docker
  artifacts:
    paths: [".hermes/"]

# hermes metadata preparation - this job creates a MR that will trigger deposition when merged.
hermes_prepare_metadata:
  extends:
    - .hermes_job
  variables:
    MR_SOURCE_BRANCH: hermes/curate-result-$CI_COMMIT_SHORT_SHA
    MR_TARGET_BRANCH: hermes/curate-$CI_COMMIT_SHORT_SHA
    MR_COMMIT_MESSAGE: "[hermes] Add metadata for curation"
    MR_TITLE: Metadata Curation for Commit $CI_COMMIT_SHORT_SHA
    MR_DESCRIPTION: >-
      Please carefully review the attached metadata.
      If you are satisfied with the result, you may merge this MR, which will trigger publication.
      (Any temporary branches will be cleaned up.)
  rules:
    - exists:
      - .hermes/curate/target_branch
      when: never
    # ADAPT: This rule triggers the workflow for any push on branches not managed by this template.
    #        You might want to restrict this to a certain branch (i.e., $CI_COMMIT_BRANCH == "main") or a tag.
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH !~ /^hermes\/.*/
  script:
    - hermes harvest
    - hermes process
    - hermes curate
    - echo $CI_COMMIT_BRANCH > .hermes/curate/target_branch
    - git branch "$MR_TARGET_BRANCH" "origin/$CI_COMMIT_BRANCH"
    - git push origin "$MR_TARGET_BRANCH"
    - git add -f .hermes/curate
    - *hermes_create_merge_request

# hermes deposition and post-processing - this job creates a MR to re-integrate the results of post-processing.
hermes_publish_curated_metadata_and_postprocess:
  stage: deploy
  extends:
    - .hermes_job
  variables:
    HERMES_ARCHIVE_NAME: $CI_PROJECT_NAME.zip
    MR_SOURCE_BRANCH: hermes/post-$CI_COMMIT_SHORT_SHA
    MR_COMMIT_MESSAGE: "[hermes] Add post-processing results"
    MR_TITLE: Review hermes post-processing results
    MR_DESCRIPTION: >-
      This is an automated pull request created by HERMES post-processing. 
      Please carefully review the changes and finally merge them into your
  rules:
    - if: $CI_PIPELINE_SOURCE != "push" || $CI_COMMIT_BRANCH !~ /^hermes\/curate-[0-9a-f]{8}/
      when: never
    - exists:
      - .hermes/curate/target_branch
  script:
    - MR_TARGET_BRANCH="$(cat .hermes/curate/target_branch)"
    - *hermes_create_deposition
    - hermes deposit --initial --auth-token $ZENODO_TOKEN --file $HERMES_ARCHIVE_NAME --file README.md
    - hermes postprocess
    - git add .
    - *hermes_create_merge_request
  after_script:
    - *hermes_cleanup_branches
